##
## ClickHouse database credentials.
##
ch:
  addr: clickhouse:9000
  user: default
  password:
  database: uptrace
  max_execution_time: 30s

##
## PostgreSQL db that is used to store metadata such us metric names, dashboards, alerts,
## and so on.
##
pg:
  addr: pg-uptrace:5432
  user: uptrace
  password: HermanFuLLer
  database: uptrace


##
## A list of pre-configured projects. Each project is fully isolated.
##
projects:
  # Conventionally, the first project is used to monitor Uptrace itself.
  - id: 1
    name: Uptrace
    # Token grants write access to the project. Keep a secret.
    token: safkjaolihsfioug3hwinfkjahbgsidjugfhasluiobnduasobguyedofsdkljfnbksdnf
    pinned_attrs:
      - service.name
      - host.name
      - deployment.environment
    # Group spans by deployment.environment attribute.
    group_by_env: false
    # Group funcs spans by service.name attribute.
    group_funcs_by_service: false

  # Other projects can be used to monitor your applications.
  # To monitor micro-services or multiple related services, use a single project.
  - id: 2
    name: rustserver
    token: IJALGDFSHGIKUHDS87HRIFE92318Y98RHBFN8EY3118092FDH3891H80F317HF80EN8NO8IFS
    pinned_attrs:
    - type
    # Group spans by deployment.environment attribute.
    group_by_env: false
    # Group funcs spans by service.name attribute.
    group_funcs_by_service: false

##
## Create metrics from spans and events.
##
metrics_from_spans:
  - name: uptrace.tracing.spans
    description: Spans duration (excluding events)
    instrument: histogram
    unit: microseconds
    value: .duration / 1000
    attrs:
      - .system
      - .group_id
      - service.name
      - host.name
      - .status_code
    annotations:
      - display.name
    where: .event_name = ''

  - name: uptrace.tracing.events
    description: Events count (excluding spans)
    instrument: counter
    unit: 1
    value: .count
    attrs:
      - .system
      - .group_id
      - .name
      - host.name
    annotations:
      - display.name
    where: .is_event = 1

auth:
  users:
    - name: MegaAdmin
      email: gena@rust.ru
      password: HermanFuLLer
      notify_by_email: false

##
## Various options to tweak ClickHouse schema.
## For changes to take effect, you need reset the ClickHouse database with `ch reset`.
##
ch_schema:
  # Compression codec, for example, LZ4, ZSTD(3), or Default.
  compression: ZSTD(3)

  # Cluster name for Distributed tables and ON CLUSTER clause.
  #cluster: uptrace1

  # Whether to use ClickHouse replication.
  # Cluster name is required when replication is enabled.
  #replicated: true

  spans:
    # Delete spans data after 7 days.
    #ttl_delete: 7 DAY
    storage_policy: 'default'

  metrics:
    # Delete metrics data after 30 days.
    #ttl_delete: 30 DAY
    storage_policy: 'default'


##
## Addresses on which Uptrace receives gRPC and HTTP requests.
##
listen:
  # OTLP/gRPC API.
  grpc:
    addr: ':14317'

  # OTLP/HTTP API and Uptrace API with Vue UI.
  http:
    addr: ':14318'

##
## Spans processing options.
##
spans:
  # The size of the Go chan used to buffer incoming spans.
  # If the buffer is full, Uptrace starts to drop spans.
  #buffer_size: 100000

  # The number of spans to insert in a single query.
  #batch_size: 10000

##
## Metrics processing options.
##
metrics:
  # List of attributes to drop for being noisy.
  drop_attrs:
    - telemetry.sdk.language
    - telemetry.sdk.name
    - telemetry.sdk.version

  # The size of the Go chan used to buffer incoming measures.
  # If the buffer is full, Uptrace starts to drop measures.
  #buffer_size: 100000

  # The number of measures to insert in a single query.
  #batch_size: 10000

  # The size of the buffer for converting cumulative metrics to delta.
  #cum_to_delta_size: 100000

###
### Service graph processing options.
###
service_graph:
  # Uncomment to disable.
  #disabled: true
  store:
    # Number of incomplete edges to store.
    # If the store is full, the edge is dropped.
    size: 1000000
    # For how long the incomplete edges are stored.
    ttl: 5s

##
## SMTP settings to send emails.
## https://uptrace.dev/get/alerting.html
##
# smtp_mailer:
#   enabled: true
#   host: localhost
#   port: 1025
#   username: mailhog
#   password: mailhog
#   from: 'uptrace@localhost'

##
## uptrace-go client configuration.
## Uptrace sends internal telemetry here. Defaults to listen.grpc.addr.
##
uptrace_go:
  # dsn: http://project1_secret_token@localhost:14317/1
  # tls:
  #   cert_file: config/tls/uptrace.crt
  #   key_file: config/tls/uptrace.key
  #   insecure_skip_verify: true

##
## Logging configuration.
##
logging:
  # Zap minimal logging level.
  # Valid values: DEBUG, INFO, WARN, ERROR, DPANIC, PANIC, FATAL.
  level: INFO

# Secret key that is used to sign JWT tokens etc.
secret_key: 102c1a557c314fc28198acd017960843

# Enable to log HTTP requests and database queries.
debug: false